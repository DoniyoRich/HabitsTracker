services:
  web:
    build: .
    image: habits_app
    env_file: .env
    volumes:
      - static_volume:/habits/static
      - media_volume:/habits/media
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:17-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:6-alpine
    command: redis-server
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/habits/static
      - media_volume:/habits/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: